---
pagetitle: "Atlas Notebook Template"
# license: CC BY
nb-authors: 
  - Brayden Youngberg
  - Pete Stewart
date-created: '2025-02-19'
date-edited: today
---


# `{ojs} nbTitle`



```{ojs}

viewof prettyLanguageView = {
  return Inputs.bind(
    Inputs.radio(languages, {
      label: _lang(general_translations.language),
      format: (d) => d.label
    }),
    viewof language
  );
}
```

# `{ojs} test_heading`

```{ojs}
//| echo: false
//| label: appendix
md`
# appendix
- License
- Authors
- Acknowledgements
- Citation
- Last Updated
`

```

# `{ojs} _lang(general_translations.appendix)`
- `{ojs} "License"` [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/)
- `{ojs} "Authors"` {{< meta nb-authors.1 >}}, {{< meta nb-authors.2 >}}


# Source code

```{ojs}
//| echo: false
import { atlas_toc } from '../helpers/floating-toc.ojs'

toc_bottom = atlas_toc({
  skip: [nbTitle],
  heading: `<b>${Lang.toSentenceCase(_lang(general_translations.toc))}</b>`
})

htl.html`
      <div class='floating-toc'>
      ${toc_bottom}
      </div>
      `
```



<!-- Text and Language Translations -->
```{ojs}
//| echo: false
//| 
nbTitle = "Template For Adaptation Atlas Notebooks"
test_heading = "test"

```

```{ojs}
//| echo: false
import { Lang } from '../helpers/lang.ojs'

general_translations = await FileAttachment("../helpers/lang_generalTranslations.json").json()

languages = [
  { key: "en", label: "English", locale: 'en-US' },
  { key: "fr", label: "FranÃ§ais", locale: 'fr-FR' }
]

defaultLangKey = {
  const name = "lang";
  const list = languages.map((d) => d.key);
  const defaultKey = "en";
  const queryParam = await Lang.getParamFromList({ name, list });
  return queryParam ?? defaultKey;
}

_lang = Lang.lg(language.key)

viewof language = Inputs.radio(languages, {
  label: "Main language toggle",
  format: (d) => d.key,
  value: languages.find((x) => x.key === defaultLangKey),
})
```