function atlas_toc({
  selector = "h1", // Selectors to include (e.g., "h1,h2,h3")
  heading = "<b>In this notebook</b>", // Heading for ToC
  delim = '&nbsp;|&nbsp;', // Delimiter between links
  skip = [], // Headers to exclude by text content
  activeClass = "active", // Class for active link
} = {}) {

  return Generators.observe(notify => {
    let headings = [];
    let links = [];
    let timeout;

    function observed() {
      clearTimeout(timeout);
      timeout = setTimeout(() => {
        const h = Array.from(document.querySelectorAll(selector))
          .filter(d => !skip.includes(d.textContent));

        if (h.length === headings.length && h.every((el, i) => el === headings[i
        ])) return;

        headings = h;
        links = headings.map(createLink);

        notify(html`${heading
        }<br>${
          headings.length 
            ? links.map((link, i) => html`<span>${link
          }${i < links.length - 1 ? delim : ''
          }</span>`)
            : html`<span>No headings found.</span>`
        }`);
      },
      5);
    }

    function createLink(h) {
      const link = html`<a class='toc-link' href=#${h.id
      }>${DOM.text(h.textContent)
      }</a>`;
      link.onclick = e => {
        e.preventDefault();
        h.scrollIntoView({ behavior: 'smooth'
        });
        setActiveLink(link);
      };
      return link;
    }

    function setActiveLink(activeLink) {
      links.forEach(link => link.classList.toggle(activeClass, link === activeLink));
    }

    function onScroll() {
      const closest = links[headings
        .map(h => Math.abs(h.getBoundingClientRect().top))
        .reduce((minIdx, dist, i, arr) => dist < arr[minIdx
        ] ? i : minIdx,
        0)
      ];
      setActiveLink(closest);
    }

    const observer = new MutationObserver(observed);
    observer.observe(document.body,
    { childList: true, subtree: true
    });
    window.addEventListener('scroll', onScroll);

    observed();
    onScroll();

    return () => {
      observer.disconnect();
      window.removeEventListener('scroll', onScroll);
    };
  });
}