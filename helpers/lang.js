const s="2.0.1";export function lg(e){return t=>getText(t,{key:e})}export function getText(e,{key:t=null}={}){if(t===null)throw new Error("No 'key' field; please provide a language key.");return e?.[t]}export function getRegexForNamedInsertion(e,{start:t=":::",end:n=":::"}={}){return new RegExp(`${t}\\s*${e}\\s*${n}`,"g")}export function reduceReplaceTemplateItems(e,t,{templateNameField:n="name",templateValueField:a="value",...r}={}){return t.reduce((i,o)=>i.replace(getRegexForNamedInsertion(o[n],{...r}),o[a]),e)}export function listLeavesMissingObjectKeys(e,t){const n=[];function a(r,i){if(!(typeof r!="object"||r===null)){if(Array.isArray(r)){if(r.length===0){n.push({[i]:r});return}r.forEach((o,l)=>a(o,`${i}[${l}]`));return}if(Object.keys(r).length===0){n.push({[i]:r});return}for(let o in r)if(Object.hasOwnProperty.call(r,o)){if(typeof r[o]=="object"&&r[o]!==null)a(r[o],`${i}.${o}`);else if(t.filter(l=>!(l in r)).length>0){n.push({[i]:r});break}}}}return a(e,""),n}export async function getParamFromList({name:e,list:t,search:n=location.search}={}){if(!e||!t)throw new Error("'name' and 'list' parameters are required.");const a=new URLSearchParams(n).get(e);return a&&t.includes(a)?a:null}export function toTitleCase(e){if(typeof e!="string")throw new Error("Input must be a string");return e.replace(/\w\S*/g,t=>t.charAt(0).toUpperCase()+t.slice(1))}export function toSentenceCase(e){if(typeof e!="string")throw new Error("Input must be a string");return e.charAt(0).toUpperCase()+e.slice(1)}export const lang={version:s,lg,getText,getRegexForNamedInsertion,reduceReplaceTemplateItems,listLeavesMissingObjectKeys,getParamFromList,toTitleCase,toSentenceCase};export default lang;
