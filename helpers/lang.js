const l="2.0.1";export function lg(e){return r=>getText(r,{key:e})}export function getText(e,{key:r=null}={}){if(r===null)throw new Error("No 'key' field; please provide a language key.");return e?.[r]}export function getRegexForNamedInsertion(e,{start:r=":::",end:n=":::"}={}){return new RegExp(`${r}\\s*${e}\\s*${n}`,"g")}export function reduceReplaceTemplateItems(e,r,{templateNameField:n="name",templateValueField:a="value",...t}={}){return r.reduce((s,o)=>s.replace(getRegexForNamedInsertion(o[n],{...t}),o[a]),e)}export function listLeavesMissingObjectKeys(e,r){const n=[];function a(t,s){if(!(typeof t!="object"||t===null)){if(Array.isArray(t)){if(t.length===0){n.push({[s]:t});return}t.forEach((o,i)=>a(o,`${s}[${i}]`));return}if(Object.keys(t).length===0){n.push({[s]:t});return}for(let o in t)if(Object.hasOwnProperty.call(t,o)){if(typeof t[o]=="object"&&t[o]!==null)a(t[o],`${s}.${o}`);else if(r.filter(i=>!(i in t)).length>0){n.push({[s]:t});break}}}}return a(e,""),n}export async function getParamFromList({name:e,list:r,search:n=location.search}={}){if(!e||!r)throw new Error("'name' and 'list' parameters are required.");const a=new URLSearchParams(n).get(e);return a&&r.includes(a)?a:null}export function toTitleCase(e){if(typeof e!="string")throw new Error("Input must be a string");return e.replace(/\w\S*/g,r=>r.charAt(0).toUpperCase()+r.slice(1))}export function toSentenceCase(e){if(typeof e!="string")throw new Error("Input must be a string");return e.charAt(0).toUpperCase()+e.slice(1)}export const lang={version:l,lg,getText,getRegexForNamedInsertion,reduceReplaceTemplateItems,listLeavesMissingObjectKeys,getParamFromList,toTitleCase,toSentenceCase};export default lang;
