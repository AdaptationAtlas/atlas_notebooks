const l="2.0.1";export function lg(e){return n=>getText(n,{key:e})}export function getText(e,{key:n=null}={}){if(n===null)throw new Error("No 'key' field; please provide a language key.");return e?.[n]}export function getRegexForNamedInsertion(e,{start:n=":::",end:r=":::"}={}){return new RegExp(`${n}\\s*${e}\\s*${r}`,"g")}export function reduceReplaceTemplateItems(e,n,{templateNameField:r="name",templateValueField:a="value",...t}={}){return n.reduce((s,o)=>s.replace(getRegexForNamedInsertion(o[r],{...t}),o[a]),e)}export function listLeavesMissingObjectKeys(e,n){const r=[];function a(t,s){if(!(typeof t!="object"||t===null)){if(Array.isArray(t)){if(t.length===0){r.push({[s]:t});return}t.forEach((o,i)=>a(o,`${s}[${i}]`));return}if(Object.keys(t).length===0){r.push({[s]:t});return}for(let o in t)if(Object.hasOwnProperty.call(t,o)){if(typeof t[o]=="object"&&t[o]!==null)a(t[o],`${s}.${o}`);else if(n.filter(i=>!(i in t)).length>0){r.push({[s]:t});break}}}}return a(e,""),r}export async function getParamFromList({name:e,list:n,search:r=location.search}={}){if(!e||!n)throw new Error("'name' and 'list' parameters are required.");const a=new URLSearchParams(r).get(e);return a&&n.includes(a)?a:null}export function toTitleCase(e){if(typeof e!="string")throw new Error("Input must be a string");return e.replace(/\w\S*/g,n=>n.charAt(0).toUpperCase()+n.slice(1))}export function toSentenceCase(e){if(typeof e!="string")throw new Error("Input must be a string");return e.charAt(0).toUpperCase()+e.slice(1)}export const lang={version:l,lg,getText,getRegexForNamedInsertion,reduceReplaceTemplateItems,listLeavesMissingObjectKeys,getParamFromList,toTitleCase,toSentenceCase};export default lang;
