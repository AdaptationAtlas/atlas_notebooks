const y="2.0.1";function c(e){return r=>o(r,{key:e})}function o(e,{key:r=null}={}){if(r===null)throw new Error("No 'key' field; please provide a language key.");return e?.[r]}function u(e,{start:r=":::",end:n=":::"}={}){return new RegExp(`${r}\\s*${e}\\s*${n}`,"g")}function f(e,r,{templateNameField:n="name",templateValueField:s="value",...t}={}){return r.reduce((i,a)=>i.replace(u(a[n],{...t}),a[s]),e)}function p(e,r){const n=[];function s(t,i){if(!(typeof t!="object"||t===null)){if(Array.isArray(t)){if(t.length===0){n.push({[i]:t});return}t.forEach((a,l)=>s(a,`${i}[${l}]`));return}if(Object.keys(t).length===0){n.push({[i]:t});return}for(let a in t)if(Object.hasOwnProperty.call(t,a)){if(typeof t[a]=="object"&&t[a]!==null)s(t[a],`${i}.${a}`);else if(r.filter(l=>!(l in t)).length>0){n.push({[i]:t});break}}}}return s(e,""),n}async function g({name:e,list:r,search:n=location.search}={}){if(!e||!r)throw new Error("'name' and 'list' parameters are required.");const s=new URLSearchParams(n).get(e);return s&&r.includes(s)?s:null}function m(e){if(typeof e!="string")throw new Error("Input must be a string");return e.replace(/\w\S*/g,r=>r.charAt(0).toUpperCase()+r.slice(1))}function h(e){if(typeof e!="string")throw new Error("Input must be a string");return e.charAt(0).toUpperCase()+e.slice(1)}export default{version:y,lg:c,getText:o,getRegexForNamedInsertion:u,reduceReplaceTemplateItems:f,listLeavesMissingObjectKeys:p,getParamFromList:g,toTitleCase:m,toSentenceCase:h};export const lang={lg:c,getText:o,getRegexForNamedInsertion:u,reduceReplaceTemplateItems:f,listLeavesMissingObjectKeys:p,getParamFromList:g,toTitleCase:m,toSentenceCase:h};
